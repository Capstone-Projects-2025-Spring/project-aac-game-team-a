"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3374],{84811:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"requirements/system-overview","title":"System Overview","description":"Project abstraction","source":"@site/docs/requirements/system-overview.md","sourceDirName":"requirements","slug":"/requirements/system-overview","permalink":"/project-aac-game-team-a/docs/requirements/system-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Spring/project-aac-game-team-a/tree/main/documentation/docs/requirements/system-overview.md","tags":[],"version":"current","lastUpdatedBy":"Lincoln Mcloud","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Requirements Specification","permalink":"/project-aac-game-team-a/docs/category/requirements-specification"},"next":{"title":"System Block Diagram","permalink":"/project-aac-game-team-a/docs/requirements/system-block-diagram"}}');var i=n(74848),s=n(28453);const a={sidebar_position:1},o="System Overview",c={},l=[{value:"Project abstraction",id:"project-abstraction",level:2},{value:"Conceptual Design",id:"conceptual-design",level:2},{value:"Frontend",id:"frontend",level:3},{value:"Backend",id:"backend",level:3}];function d(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"system-overview",children:"System Overview"})}),"\n",(0,i.jsx)(t.h2,{id:"project-abstraction",children:"Project abstraction"}),"\n",(0,i.jsx)(t.p,{children:"Scribblers is a Pictionary-style, web-based application game that implements AAC controls through an external API. The project uses frontend frameworks for AAC communication, drawing functionality, lobby hosting & joining, real-time event handling, and real-time communciation. The backend will be designed to handle external API implementation, game logic, real-time user interaction updates, and game history & statisitcs."}),"\n",(0,i.jsx)(t.h2,{id:"conceptual-design",children:"Conceptual Design"}),"\n",(0,i.jsx)(t.h3,{id:"frontend",children:"Frontend"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Vue.js"})," - Frontend framework being used to build the game interface, handle client-side event communication, and to comply with the API written for the AAC board to be implemented."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Vue Router"})," - Vue.js library to dynamically update the user interface during navigation between views or components."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Pinia"})," - Vue.js state management framework to store game state and keeping UI componenets consistent during gameplay."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Fabric.js"})," - JavaScript canvas library to handle board and drawing components."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Socket.io (Client-Side)"})," - JavaScript library that uses the WebSocket protocol for real-time communication between users."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"backend",children:"Backend"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Node.js"})," - Backend framework to implement a runtime enviornment for handling game logic, handle server-side game state, and manage real-time events."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Socket.io (Server-Side)"})," - JavaScript library that uses the WebSocket protocol for providing real-time updates to users."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"MongoDB (NoSQL)"})," - Database management system that stores data in JSON-like documents for flexible game session data and user statistics."]}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);